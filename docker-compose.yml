version: "3.8"
services:

    db:
        image: postgres:13-alpine
        restart: always
        volumes:
            - db-data:/var/lib/postgresql
        environment:
            POSTGRES_USER: main
            POSTGRES_PASSWORD: main
            POSTGRES_DB: main
        ports: 
            - "5432:5432"
        networks:
            - dev

    adminer:
        image: adminer
        restart: always
        depends_on:
            - db
        ports:
            - "8090:8080"
        networks:
            - dev

    mailer:
        image: schickling/mailcatcher
        ports: [1025, 1080]
        networks:
            - dev

    traefik:
        restart: unless-stopped
        image: traefik:v2.0.2
        ports:
            - "80:80"
            - "443:443"
        labels:
            - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        volumes:
            - ./traefik.yml:/etc/traefik/traefik.yml
            - ./tls.yml:/etc/traefik/tls.yml
            - //var/run/docker.sock:/var/run/docker.sock
            - certs:/etc/ssl/traefik
        networks:
            - dev

    reverse-proxy-https-helper:
        image: alpine
        command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
        volumes:
            - certs:/etc/ssl/traefik
        networks:
            - dev

    nginx:
        image: nginx:1.19-alpine
        restart: always
        ports:
            - "8080:80"
        volumes:
            - './public:/var/www/api/public:ro'
            - './.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf'
        depends_on:
            - php
        networks:
            - dev
        labels:
            - "traefik.http.routers.app1.rule=Host(`app1.traefik.me`)"
            - "traefik.http.routers.app1-tls.tls.domains[0].main=app1.traefik.me"
            - "traefik.http.routers.app1-tls.tls.domains[0].sans=app1-*.traefik.me"
            - "traefik.http.routers.app1.tls=true"

    php:
        build:
            context: ./
        working_dir: /var/www/api
        restart: always
        environment:
            APP_ENV: dev
            DATABASE_URL: "postgresql://main:main@db:5432/main?sslmode=disable&charset=utf8"
        depends_on:
            - db
        volumes:
            - '.:/var/www/api'
        networks:
            - dev

networks:
    dev:

volumes:
    db-data:
    certs:
